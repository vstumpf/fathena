name: Build servers with CMake and GCC on Linux

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    paths:
      # Always trigger all Github Actions if an action or something CI related was changed
      - '.github/workflows/**'
      - 'tools/ci/**'
      # This workflow should run when a file in a source directory has been modified.
      - 'src/**'
      - '3rdparty/**'
      # This workflow should run whenever a CMake related file has been modified
      - '**/CMakeLists.txt'

jobs:
  build:
    # Github Actions checks for '[ci skip]', '[skip ci]', '[no ci]', '[skip actions]', or '[actions skip]' but not a hyphenated version.
    # It's a catch-all incase a Pull Request has been opened and someone is on auto-pilot.
    if: "!contains(github.event.head_commit.message, 'ci-skip')"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [ubuntu-latest]
          gcc: ['9', '12', '14']

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Update & Install compilers
        run: |
          sudo apt update
          sudo apt install zlib1g-dev libpcre3-dev gcc-${{matrix.gcc}} g++-${{matrix.gcc}}

      - name: Restore from cache and setup vcpkg executable and data files.
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '3rdparty/vcpkg'
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Run CMake
        uses: lukka/run-cmake@v10
        with:
          configurePreset: ci-test-linux
          configurePresetAdditionalArgs: "['-DCMAKE_CXX_COMPILER=g++-${{matrix.gcc}}', '-DCMAKE_C_COMPILER=gcc-${{matrix.gcc}}']"
          buildPreset: ci-test-linux
          buildPresetAdditionalArgs: "['-j', '$(nproc)']"

      - name: Run tests
        run: cmake --build --preset ci-test-linux --target test
